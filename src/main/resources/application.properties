# Application Configuration
spring.application.name=${SPRING_APPLICATION_NAME}
server.port=${SERVER_PORT}
spring.profiles.active=dev

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

spring.sql.init.mode=always
spring.sql.init.platform=postgresql
spring.jpa.defer-datasource-initialization=true

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:false}
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.open-in-view=false

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:127.0.0.1}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=2000
spring.data.redis.lettuce.shutdown-timeout=0

# JWT Configuration
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.access-token.expiration=${APP_JWT_ACCESS_TOKEN_EXPIRATION:3600000}
app.jwt.refresh-token.expiration=${APP_JWT_REFRESH_TOKEN_EXPIRATION:604800000}
app.jwt.issuer=${APP_JWT_ISSUER:lsm-application}
app.jwt.access-token.remember-me-multiplier=7
app.jwt.refresh-token.remember-me-multiplier=7

# Encoding
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html;charset=UTF-8

# Security Configuration
security.jwt.header.xsrf=${SECURITY_JWT_HEADER_XSRF:X-XSRF-TOKEN}
security.jwt.ignore-paths=${SECURITY_JWT_IGNORE_PATHS:/api/v1/auth/**,/swagger-ui/**,/api-docs/**,/actuator/**}
security.password.encoder.strength=${SECURITY_PASSWORD_ENCODER_STRENGTH:12}
security.session.maximum-sessions=${SECURITY_MAX_SESSIONS:1}
security.session.max-sessions-prevents-login=true

# Rate Limiting Configuration
rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
rate.limit.max-attempts=${RATE_LIMIT_MAX_ATTEMPTS:5}
rate.limit.duration=${RATE_LIMIT_DURATION:15}
rate.limit.type=${RATE_LIMIT_TYPE:REDIS}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-methods=${CORS_ALLOWED_METHODS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS}
cors.max-age=${CORS_MAX_AGE}

# Logging Configuration
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.com.lsm=${LOGGING_LEVEL_APP:DEBUG}
logging.level.org.springframework.security=${LOGGING_LEVEL_SECURITY:INFO}
logging.level.org.springframework.web=${LOGGING_LEVEL_WEB:INFO}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_SQL:INFO}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.health.redis.enabled=true
management.info.git.mode=full

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:3600000}
spring.cache.redis.cache-null-values=false

# Security
security.login-attempts.max-attempts=5
security.login-attempts.block-duration-minutes=15
security.login-attempts.cache-max-size=10000

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Frontend URL for email links
app.frontend.url=http://your-frontend-url
app.password-reset.token.expiration=3600000

# File Upload Configuration
# for local development. C:/app/uploads or /var/www/uploads
app.upload.dir=${APP_UPLOAD_DIR}
app.file-storage.base-path=${APP_UPLOAD_DIR}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
springdoc.swagger-ui.display-request-duration=true
springdoc.show-actuator=true
springdoc.packages-to-scan=com.lsm.controller

# Server Configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=LAX

# Async Configuration
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-task-

# Jackson Configuration
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Hibernate Search Configuration (if needed)
spring.jpa.properties.hibernate.search.backend.type=lucene
spring.jpa.properties.hibernate.search.backend.directory.root=indexes

# Metrics Configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.export.prometheus.enabled=true

# Test
org.springframework.test.context=DEBUG
org.springframework.boot.test.context=DEBUG
org.springframework.security=DEBUG

firebase.project-id=${FIREBASE_PROJECT_ID}
firebase.private-key-id=${FIREBASE_PRIVATE_KEY_ID}
firebase.private-key=${FIREBASE_PRIVATE_KEY}
firebase.client-email=${FIREBASE_CLIENT_EMAIL}
firebase.client-id=${FIREBASE_CLIENT_ID}
firebase.auth-uri=${FIREBASE_AUTH_URI}
firebase.token-uri=${FIREBASE_TOKEN_URI}
firebase.auth-provider-cert-url=${FIREBASE_AUTH_PROVIDER_CERT_URL}
firebase.client-cert-url=${FIREBASE_CLIENT_CERT_URL}
